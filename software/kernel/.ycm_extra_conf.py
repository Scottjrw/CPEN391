# Generated by YCM Generator at 2018-03-16 06:04:34.898754

# This file is NOT licensed under the GPLv3, which is the license for the rest
# of YouCompleteMe.
#
# Here's the license text for this file:
#
# This is free and unencumbered software released into the public domain.
#
# Anyone is free to copy, modify, publish, use, compile, sell, or
# distribute this software, either in source code form or as a compiled
# binary, for any purpose, commercial or non-commercial, and by any
# means.
#
# In jurisdictions that recognize copyright laws, the author or authors
# of this software dedicate any and all copyright interest in the
# software to the public domain. We make this dedication for the benefit
# of the public at large and to the detriment of our heirs and
# successors. We intend this dedication to be an overt act of
# relinquishment in perpetuity of all present and future rights to this
# software under copyright law.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
# For more information, please refer to <http://unlicense.org/>

import os
import ycm_core

flags = [
    '-x',
    'c',
    '-DCC_HAVE_ASM_GOTO',
    '-DKBUILD_BASENAME=KBUILD_STR(vgabuffer)',
    '-DKBUILD_MODNAME=KBUILD_STR(vgabuffer)',
    '-DKBUILD_STR(s)=#s',
    '-DMODULE',
    '-D__KERNEL__',
    '-D__LINUX_ARM_ARCH__=7',
    '-Iinclude',
    '-Iarch/arm/include/generated',
    '-Iarch/arm/include/generated/uapi',
    '-Iinclude/uapi',
    '-Iarch/arm/include',
    '-Iarch/arm/include/uapi',
    '-Wall',
    '-Wdeclaration-after-statement',
    '-Werror',
    '-Werror-implicit-function-declaration',
    '-Werror=date-time',
    '-Werror=implicit-int',
    '-Werror=strict-prototypes',
    '-Wframe-larger-than=1024',
    '-Wno-declaration-after-statement',
    '-Wno-format-security',
    '-Wno-pointer-sign',
    '-Wno-trigraphs',
    '-Wno-unused-but-set-variable',
    '-Wno-shift-count-overflow',
    '-Wstrict-prototypes',
    '-Wundef',
    '-fheinous-gnu-extension',
    '-Wno-gnu-variable-sized-type-not-at-end',
    '-std=gnu89',
    '-std=gnu99',
    '-include', 'include/linux/kconfig.h',
    '-target',
    'arm-v7f-linux-gnu'
]

SOURCE_EXTENSIONS = [ '.C', '.cpp', '.cxx', '.cc', '.c', '.m', '.mm' ]

def DirectoryOfThisScript():
  return os.path.dirname( os.path.abspath( __file__ ) )


def MakeRelativePathsInFlagsAbsolute( flags, working_directory ):
  if not working_directory:
    return list( flags )
  new_flags = []
  make_next_absolute = False
  path_flags = [ '-isystem', '-I', '-iquote', '--sysroot=', '-include' ]
  for flag in flags:
    new_flag = flag

    if make_next_absolute:
      make_next_absolute = False
      if not flag.startswith( '/' ):
        new_flag = os.path.join( working_directory, flag )

    for path_flag in path_flags:
      if flag == path_flag:
        make_next_absolute = True
        break

      if flag.startswith( path_flag ):
        path = flag[ len( path_flag ): ]
        new_flag = path_flag + os.path.join( working_directory, path )
        break

    if new_flag:
      new_flags.append( new_flag )
  return new_flags


def IsHeaderFile( filename ):
  extension = os.path.splitext( filename )[ 1 ]
  return extension in [ '.H', '.h', '.hxx', '.hpp', '.hh' ]


def FlagsForFile( filename, **kwargs ):
    relative_to = os.path.join(DirectoryOfThisScript(), 'linux-4.5')
    final_flags = MakeRelativePathsInFlagsAbsolute( flags, relative_to )

    color_coded_file = os.path.join(DirectoryOfThisScript(), '.color_coded')
    if not os.path.isfile(color_coded_file):
        with open(color_coded_file, 'w') as f:
            f.write('\n'.join(final_flags) + '\n')

    return {
        'flags': final_flags,
        'do_cache': True
    }

